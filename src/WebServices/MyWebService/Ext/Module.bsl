
Функция Синхронизация(Данные)
	
	// ОтветКлиенту = Обмен.ЗарегистрироватьВыгрузкуНаСервере(Данные.Получить()); //TODO - устранить дублирование кода
	ОтветКлиенту = ЗарегистрироватьВыгрузку(Данные.Получить());
	РезультатСинхронизации = Новый ХранилищеЗначения(ОтветКлиенту, Новый СжатиеДанных(9));
	Возврат РезультатСинхронизации;
	
КонецФункции

Функция ЗарегистрироватьВыгрузку(СтрокаСообщения)

	УстановитьПривилегированныйРежим(Истина);
	
	ЧтениеXML = Новый ЧтениеXML;
	ЧтениеXML.УстановитьСтроку(СтрокаСообщения);
	ЧтениеСообщения = ПланыОбмена.СоздатьЧтениеСообщения();
	ЧтениеСообщения.НачатьЧтение(ЧтениеXML);
	Отправитель = ЧтениеСообщения.Отправитель;
	
	Пока ВозможностьЧтенияXML(ЧтениеXML) Цикл
		Данные = ПрочитатьXML(ЧтениеСообщения.ЧтениеXML);
		Если Данные <> Неопределено Тогда
		   Данные.ОбменДанными.Отправитель = Отправитель;
		   Данные.ОбменДанными.Загрузка = Истина;
		   Данные.Записать();
		КонецЕсли;   
	КонецЦикла;	
	ЧтениеСообщения.ЗакончитьЧтение();
	
	
	ЗаписьXML = Новый ЗаписьXML;
	ЗаписьXML.УстановитьСтроку();
	ЗаписьСообщения = ПланыОбмена.СоздатьЗаписьСообщения();
	ЗаписьСообщения.НачатьЗапись(ЗаписьXML, Отправитель);
	
	ТранспортноеСредство = ЗаписьСообщения.Получатель.ТранспортноеСредство;
	
	ВыборкаИзменений = ПланыОбмена.ВыбратьИзменения(Отправитель, ЗаписьСообщения.НомерСообщения);
	НомерСообщения = ЗаписьСообщения.НомерСообщения;
	Пока ВыборкаИзменений.Следующий() Цикл
		ОбъектОбмена = ВыборкаИзменений.Получить();
		
		// Отбор для выгрузки - по нужно перенести в регистрацию объектов при записи - TODO
		Если ОбщегоНазначения.НаличиеСвойстваУОбъекта(ОбъектОбмена, "ТранспортноеСредство") 
			И ОбъектОбмена.ТранспортноеСредство <> ТранспортноеСредство	Тогда
			
			Продолжить;
			
		КонецЕсли;
		
		ЗаписатьXML(ЗаписьXML, ОбъектОбмена);
	КонецЦикла;
	ЗаписьСообщения.ЗакончитьЗапись();
	
	ПланыОбмена.УдалитьРегистрациюИзменений(Отправитель, НомерСообщения);
	
	Возврат ЗаписьXML.Закрыть();

КонецФункции // ЗарегистрироватьВыгрузку()
