Процедура ВыполнитьСинхронизациюВФоне() Экспорт

	Задание = ФоновыеЗадания.Выполнить("Обмен.ВыполнитьСинхронизацию", , , "ФоновыйОбмен");

КонецПроцедуры

Функция ВыполнитьСинхронизацию() Экспорт

	Попытка

		АдресСервера = Константы.АдресСервера.Получить();
		
		WSОпред = Новый WSОпределения(АдресСервера + "/cargo-driver/ws/MyWebService.1cws?wsdl");
		WebСервис = WSОпред.Сервисы.Получить("Data", "MyWebService");
		ТочкаВхода = WebСервис.ТочкиПодключения.Получить("MyWebServiceSoap");
		Операция = ТочкаВхода.Интерфейс.Операции.Получить("Синхронизация");
		РеквизитыТекущегоУзла = ПолучитьРеквизитыУзла();
		Данные = Новый ХранилищеЗначения(ЗарегистрироватьВыгрузку(РеквизитыТекущегоУзла), Новый СжатиеДанных(9));
		
		ДанныеXDTO = WSОпред.ФабрикаXDTO.Создать(Операция.Параметры.Получить("Данные").Тип, Данные);
		WSПрокси = Новый WSПрокси(WSОпред, "Data", "MyWebService", "MyWebServiceSoap");
		Ответ = WSПрокси.Синхронизация(ДанныеXDTO);
		ПринятьИзмененияПоПлану(Ответ.Получить());
		Возврат Истина;
	
	Исключение
		
		Сообщить(ОписаниеОшибки());
		Возврат Ложь;
	КонецПопытки; 
	
КонецФункции

Процедура ПринятьИзмененияПоПлану(СтрокаСообщения, Отправитель = Неопределено)

	ЧтениеXML = Новый ЧтениеXML;
	ЧтениеXML.УстановитьСтроку(СтрокаСообщения);
	ЧтениеСообщения = ПланыОбмена.СоздатьЧтениеСообщения();
	ЧтениеСообщения.НачатьЧтение(ЧтениеXML);
    Отправитель = ЧтениеСообщения.Отправитель;
    ПланыОбмена.УдалитьРегистрациюИзменений(Отправитель, Отправитель.НомерОтправленного);	
	
	Пока ВозможностьЧтенияXML(ЧтениеXML) Цикл
		Данные = ПрочитатьXML(ЧтениеСообщения.ЧтениеXML);
		Если Данные <> Неопределено Тогда
		   Данные.ОбменДанными.Отправитель = ЧтениеСообщения.Отправитель;
		   Данные.ОбменДанными.Загрузка = Истина;
		   Данные.Записать();
		КонецЕсли;   
	КонецЦикла;	
	ЧтениеСообщения.ЗакончитьЧтение();
	
КонецПроцедуры // ПринятьИзмененияПоПлану()

Функция ЗарегистрироватьВыгрузку(РеквизитыТекущегоУзла)

	ЗаписьXML = Новый ЗаписьXML;
	ЗаписьXML.УстановитьСтроку();
	ЗаписьСообщения = ПланыОбмена.СоздатьЗаписьСообщения();
	
	ЗаписьСообщения.НачатьЗапись(ЗаписьXML, РеквизитыТекущегоУзла.Узел);
	
	ВыборкаИзменений = ПланыОбмена.ВыбратьИзменения(РеквизитыТекущегоУзла.Узел, ЗаписьСообщения.НомерСообщения);
	Пока ВыборкаИзменений.Следующий() Цикл
		ОбъектОбмена = ВыборкаИзменений.Получить();
		
		ИзменитьСтатусСообщения(ОбъектОбмена);
		ЗаписатьXML(ЗаписьXML, ОбъектОбмена);
	КонецЦикла;
	ЗаписьСообщения.ЗакончитьЗапись();
	
	Возврат ЗаписьXML.Закрыть();
	
КонецФункции

Функция ЗарегистрироватьВыгрузкуНаСервере(СтрокаСообщения) Экспорт

	Отправитель = Неопределено;
	
	ПринятьИзмененияПоПлану(СтрокаСообщения, Отправитель);	
	Возврат ЗарегистрироватьВыгрузку(Отправитель);

КонецФункции // ЗарегистрироватьВыгрузку()

Процедура ИзменитьСтатусСообщения(Знач ОбъектОбмена)
	
	Если ТипЗнч(ОбъектОбмена) <> Тип("РегистрСведенийНаборЗаписей.СтатусыСообщений") Тогда
		Возврат;
	КонецЕсли;
		
	Для каждого Запись Из ОбъектОбмена Цикл
		
		Если Запись.Статус = Перечисления.СтатусыСообщений.НеОтправлено Тогда
			РегистрыСведений.СтатусыСообщений.СоздатьЗаписьСтатусСообщения(Запись.Сообщение, Перечисления.СтатусыСообщений.Отправлено);
		КонецЕсли;
		
		#Если Сервер Тогда
			Если Запись.Статус = Перечисления.СтатусыСообщений.Отправлено Тогда
				РегистрыСведений.СтатусыСообщений.СоздатьЗаписьСтатусСообщения(Запись.Сообщение, Перечисления.СтатусыСообщений.Доставлено);
			КонецЕсли;
		#КонецЕсли
		
	КонецЦикла;

КонецПроцедуры // ЗарегистрироватьВыгрузку()

Функция ПолучитьРеквизитыУзла()

	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	МобильныеУстройства.Ссылка КАК Узел,
		|	МобильныеУстройства.ТранспортноеСредство КАК ТранспортноеСредство
		|ИЗ
		|	ПланОбмена.МобильныеУстройства КАК МобильныеУстройства
		|ГДЕ
		|	МобильныеУстройства.Ссылка <> &ЭтотУзел
		|	И НЕ МобильныеУстройства.ПометкаУдаления";
	
	Запрос.УстановитьПараметр("ЭтотУзел", ПланыОбмена.МобильныеУстройства.ЭтотУзел());
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если РезультатЗапроса.Пустой() Тогда
		ВызватьИсключение("Не заполнены узлы обмена");
	КонецЕсли;
	
	Выборка = РезультатЗапроса.Выбрать();
	Выборка.Следующий();
	
	Возврат Выборка;	
	
КонецФункции // ПолучитьУзел()

